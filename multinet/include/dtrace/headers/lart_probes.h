/* Generated by the Systemtap dtrace wrapper */


#define _SDT_HAS_SEMAPHORES 1


#define STAP_HAS_SEMAPHORES 1 /* deprecated */


#include <sys/sdt.h>

/* ML_ML2AM_RESERVE ( size_t M, size_t R ) */
#if defined STAP_SDT_V1
#define ML_ML2AM_RESERVE_ENABLED() __builtin_expect (ml2am__reserve_semaphore, 0)
#define ml_ml2am__reserve_semaphore ml2am__reserve_semaphore
#else
#define ML_ML2AM_RESERVE_ENABLED() __builtin_expect (ml_ml2am__reserve_semaphore, 0)
#endif
__extension__ extern unsigned short ml_ml2am__reserve_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_ML2AM_RESERVE(arg1, arg2) \
DTRACE_PROBE2 (ml, ml2am__reserve, arg1, arg2)

/* ML_ML2AM_END ( size_t L, size_t M ) */
#if defined STAP_SDT_V1
#define ML_ML2AM_END_ENABLED() __builtin_expect (ml2am__end_semaphore, 0)
#define ml_ml2am__end_semaphore ml2am__end_semaphore
#else
#define ML_ML2AM_END_ENABLED() __builtin_expect (ml_ml2am__end_semaphore, 0)
#endif
__extension__ extern unsigned short ml_ml2am__end_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_ML2AM_END(arg1, arg2) \
DTRACE_PROBE2 (ml, ml2am__end, arg1, arg2)

/* ML_BLOCK_DIAG_RESERVE ( size_t M, size_t R ) */
#if defined STAP_SDT_V1
#define ML_BLOCK_DIAG_RESERVE_ENABLED() __builtin_expect (block__diag__reserve_semaphore, 0)
#define ml_block__diag__reserve_semaphore block__diag__reserve_semaphore
#else
#define ML_BLOCK_DIAG_RESERVE_ENABLED() __builtin_expect (ml_block__diag__reserve_semaphore, 0)
#endif
__extension__ extern unsigned short ml_block__diag__reserve_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_BLOCK_DIAG_RESERVE(arg1, arg2) \
DTRACE_PROBE2 (ml, block__diag__reserve, arg1, arg2)

/* ML_DIAGA_RESERVE ( size_t M, size_t R ) */
#if defined STAP_SDT_V1
#define ML_DIAGA_RESERVE_ENABLED() __builtin_expect (diaga__reserve_semaphore, 0)
#define ml_diaga__reserve_semaphore diaga__reserve_semaphore
#else
#define ML_DIAGA_RESERVE_ENABLED() __builtin_expect (ml_diaga__reserve_semaphore, 0)
#endif
__extension__ extern unsigned short ml_diaga__reserve_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_DIAGA_RESERVE(arg1, arg2) \
DTRACE_PROBE2 (ml, diaga__reserve, arg1, arg2)

/* ML_DMAT_NEWP_START ( ) */
#if defined STAP_SDT_V1
#define ML_DMAT_NEWP_START_ENABLED() __builtin_expect (dmat__newp__start_semaphore, 0)
#define ml_dmat__newp__start_semaphore dmat__newp__start_semaphore
#else
#define ML_DMAT_NEWP_START_ENABLED() __builtin_expect (ml_dmat__newp__start_semaphore, 0)
#endif
__extension__ extern unsigned short ml_dmat__newp__start_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_DMAT_NEWP_START() \
DTRACE_PROBE (ml, dmat__newp__start)

/* ML_DMAT_NEWP_END ( ) */
#if defined STAP_SDT_V1
#define ML_DMAT_NEWP_END_ENABLED() __builtin_expect (dmat__newp__end_semaphore, 0)
#define ml_dmat__newp__end_semaphore dmat__newp__end_semaphore
#else
#define ML_DMAT_NEWP_END_ENABLED() __builtin_expect (ml_dmat__newp__end_semaphore, 0)
#endif
__extension__ extern unsigned short ml_dmat__newp__end_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_DMAT_NEWP_END() \
DTRACE_PROBE (ml, dmat__newp__end)

/* ML_PDISTANCE_START ( int X, int Y ) */
#if defined STAP_SDT_V1
#define ML_PDISTANCE_START_ENABLED() __builtin_expect (pdistance__start_semaphore, 0)
#define ml_pdistance__start_semaphore pdistance__start_semaphore
#else
#define ML_PDISTANCE_START_ENABLED() __builtin_expect (ml_pdistance__start_semaphore, 0)
#endif
__extension__ extern unsigned short ml_pdistance__start_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_PDISTANCE_START(arg1, arg2) \
DTRACE_PROBE2 (ml, pdistance__start, arg1, arg2)

/* ML_PDISTANCE_END ( ) */
#if defined STAP_SDT_V1
#define ML_PDISTANCE_END_ENABLED() __builtin_expect (pdistance__end_semaphore, 0)
#define ml_pdistance__end_semaphore pdistance__end_semaphore
#else
#define ML_PDISTANCE_END_ENABLED() __builtin_expect (ml_pdistance__end_semaphore, 0)
#endif
__extension__ extern unsigned short ml_pdistance__end_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_PDISTANCE_END() \
DTRACE_PROBE (ml, pdistance__end)

/* ML_AGGLO_END ( int clusters ) */
#if defined STAP_SDT_V1
#define ML_AGGLO_END_ENABLED() __builtin_expect (agglo__end_semaphore, 0)
#define ml_agglo__end_semaphore agglo__end_semaphore
#else
#define ML_AGGLO_END_ENABLED() __builtin_expect (ml_agglo__end_semaphore, 0)
#endif
__extension__ extern unsigned short ml_agglo__end_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_AGGLO_END(arg1) \
DTRACE_PROBE1 (ml, agglo__end, arg1)

/* ML_AGGLO_PRUNE_START ( ) */
#if defined STAP_SDT_V1
#define ML_AGGLO_PRUNE_START_ENABLED() __builtin_expect (agglo__prune__start_semaphore, 0)
#define ml_agglo__prune__start_semaphore agglo__prune__start_semaphore
#else
#define ML_AGGLO_PRUNE_START_ENABLED() __builtin_expect (ml_agglo__prune__start_semaphore, 0)
#endif
__extension__ extern unsigned short ml_agglo__prune__start_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_AGGLO_PRUNE_START() \
DTRACE_PROBE (ml, agglo__prune__start)

/* ML_AGGLO_PRUNE_END ( ) */
#if defined STAP_SDT_V1
#define ML_AGGLO_PRUNE_END_ENABLED() __builtin_expect (agglo__prune__end_semaphore, 0)
#define ml_agglo__prune__end_semaphore agglo__prune__end_semaphore
#else
#define ML_AGGLO_PRUNE_END_ENABLED() __builtin_expect (ml_agglo__prune__end_semaphore, 0)
#endif
__extension__ extern unsigned short ml_agglo__prune__end_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_AGGLO_PRUNE_END() \
DTRACE_PROBE (ml, agglo__prune__end)

/* ML_FIND_DIST_START ( ) */
#if defined STAP_SDT_V1
#define ML_FIND_DIST_START_ENABLED() __builtin_expect (find__dist__start_semaphore, 0)
#define ml_find__dist__start_semaphore find__dist__start_semaphore
#else
#define ML_FIND_DIST_START_ENABLED() __builtin_expect (ml_find__dist__start_semaphore, 0)
#endif
__extension__ extern unsigned short ml_find__dist__start_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_FIND_DIST_START() \
DTRACE_PROBE (ml, find__dist__start)

/* ML_FIND_DIST_END ( int x, int y, char * val ) */
#if defined STAP_SDT_V1
#define ML_FIND_DIST_END_ENABLED() __builtin_expect (find__dist__end_semaphore, 0)
#define ml_find__dist__end_semaphore find__dist__end_semaphore
#else
#define ML_FIND_DIST_END_ENABLED() __builtin_expect (ml_find__dist__end_semaphore, 0)
#endif
__extension__ extern unsigned short ml_find__dist__end_semaphore __attribute__ ((unused)) __attribute__ ((section (".probes")));
#define ML_FIND_DIST_END(arg1, arg2, arg3) \
DTRACE_PROBE3 (ml, find__dist__end, arg1, arg2, arg3)

